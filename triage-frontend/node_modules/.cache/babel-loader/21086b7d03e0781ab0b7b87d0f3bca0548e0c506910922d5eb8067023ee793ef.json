{"ast":null,"code":"var _jsxFileName = \"/Users/furkanyilmaz/Desktop/ai-triage/triage-frontend/src/contexts/TriageContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TriageContext = /*#__PURE__*/createContext(undefined);\nexport const useTriageContext = () => {\n  _s();\n  const context = useContext(TriageContext);\n  if (!context) {\n    throw new Error('useTriageContext must be used within a TriageProvider');\n  }\n  return context;\n};\n_s(useTriageContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const TriageProvider = ({\n  children\n}) => {\n  _s2();\n  const [patientData, setPatientDataState] = useState(null);\n  const [triageResult, setTriageResultState] = useState(null);\n  const [isLoading, setIsLoadingState] = useState(false);\n  const [error, setErrorState] = useState(null);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const savedPatientData = localStorage.getItem('triage-patient-data');\n    const savedTriageResult = localStorage.getItem('triage-result');\n    if (savedPatientData) {\n      setPatientDataState(JSON.parse(savedPatientData));\n    }\n    if (savedTriageResult) {\n      setTriageResultState(JSON.parse(savedTriageResult));\n    }\n  }, []);\n  const setPatientData = data => {\n    setPatientDataState(data);\n    if (data) {\n      localStorage.setItem('triage-patient-data', JSON.stringify(data));\n    } else {\n      localStorage.removeItem('triage-patient-data');\n    }\n  };\n  const setTriageResult = result => {\n    setTriageResultState(result);\n    if (result) {\n      localStorage.setItem('triage-result', JSON.stringify(result));\n    } else {\n      localStorage.removeItem('triage-result');\n    }\n  };\n  const setLoading = loading => {\n    setIsLoadingState(loading);\n  };\n  const setError = error => {\n    setErrorState(error);\n  };\n  const clearData = () => {\n    setPatientDataState(null);\n    setTriageResultState(null);\n    setIsLoadingState(false);\n    setErrorState(null);\n    localStorage.removeItem('triage-patient-data');\n    localStorage.removeItem('triage-result');\n  };\n  const value = {\n    patientData,\n    setPatientData,\n    triageResult,\n    setTriageResult,\n    isLoading,\n    setLoading,\n    error,\n    setError,\n    clearData\n  };\n  return /*#__PURE__*/_jsxDEV(TriageContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s2(TriageProvider, \"C5As5HC4XVnGFSMBVaNvOVkOaQo=\");\n_c = TriageProvider;\nvar _c;\n$RefreshReg$(_c, \"TriageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","TriageContext","undefined","useTriageContext","_s","context","Error","TriageProvider","children","_s2","patientData","setPatientDataState","triageResult","setTriageResultState","isLoading","setIsLoadingState","error","setErrorState","savedPatientData","localStorage","getItem","savedTriageResult","JSON","parse","setPatientData","data","setItem","stringify","removeItem","setTriageResult","result","setLoading","loading","setError","clearData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/furkanyilmaz/Desktop/ai-triage/triage-frontend/src/contexts/TriageContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface TriageContextType {\n  patientData: any;\n  setPatientData: (data: any) => void;\n  triageResult: any;\n  setTriageResult: (result: any) => void;\n  isLoading: boolean;\n  setLoading: (loading: boolean) => void;\n  error: string | null;\n  setError: (error: string | null) => void;\n  clearData: () => void;\n}\n\nconst TriageContext = createContext<TriageContextType | undefined>(undefined);\n\nexport const useTriageContext = () => {\n  const context = useContext(TriageContext);\n  if (!context) {\n    throw new Error('useTriageContext must be used within a TriageProvider');\n  }\n  return context;\n};\n\ninterface TriageProviderProps {\n  children: ReactNode;\n}\n\nexport const TriageProvider: React.FC<TriageProviderProps> = ({ children }) => {\n  const [patientData, setPatientDataState] = useState<any>(null);\n  const [triageResult, setTriageResultState] = useState<any>(null);\n  const [isLoading, setIsLoadingState] = useState<boolean>(false);\n  const [error, setErrorState] = useState<string | null>(null);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const savedPatientData = localStorage.getItem('triage-patient-data');\n    const savedTriageResult = localStorage.getItem('triage-result');\n\n    if (savedPatientData) {\n      setPatientDataState(JSON.parse(savedPatientData));\n    }\n    if (savedTriageResult) {\n      setTriageResultState(JSON.parse(savedTriageResult));\n    }\n  }, []);\n\n  const setPatientData = (data: any) => {\n    setPatientDataState(data);\n    if (data) {\n      localStorage.setItem('triage-patient-data', JSON.stringify(data));\n    } else {\n      localStorage.removeItem('triage-patient-data');\n    }\n  };\n\n  const setTriageResult = (result: any) => {\n    setTriageResultState(result);\n    if (result) {\n      localStorage.setItem('triage-result', JSON.stringify(result));\n    } else {\n      localStorage.removeItem('triage-result');\n    }\n  };\n\n  const setLoading = (loading: boolean) => {\n    setIsLoadingState(loading);\n  };\n\n  const setError = (error: string | null) => {\n    setErrorState(error);\n  };\n\n  const clearData = () => {\n    setPatientDataState(null);\n    setTriageResultState(null);\n    setIsLoadingState(false);\n    setErrorState(null);\n    localStorage.removeItem('triage-patient-data');\n    localStorage.removeItem('triage-result');\n  };\n\n  const value: TriageContextType = {\n    patientData,\n    setPatientData,\n    triageResult,\n    setTriageResult,\n    isLoading,\n    setLoading,\n    error,\n    setError,\n    clearData,\n  };\n\n  return (\n    <TriageContext.Provider value={value}>\n      {children}\n    </TriageContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}