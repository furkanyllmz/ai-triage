{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tkurt\\\\Desktop\\\\ai-triage\\\\triage-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport './App.css';\nimport { triageApi } from './services/triageApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('patient');\n  const [patientData, setPatientData] = useState(null);\n  const [nurseNotes, setNurseNotes] = useState('');\n  const [triageState, setTriageState] = useState({\n    caseId: null,\n    currentQuestion: null,\n    remainingQuestions: 0,\n    triage: null,\n    filePath: null,\n    isLoading: false,\n    error: null\n  });\n  const processQuestions = useCallback(questions => {\n    if (Array.isArray(questions)) {\n      return questions;\n    }\n    if (questions && typeof questions === 'object') {\n      const result = [];\n      if (questions.primary) result.push(...questions.primary);\n      if (questions.secondary) result.push(...questions.secondary);\n      return result;\n    }\n    return [];\n  }, []);\n  const handleStartTriage = useCallback(async input => {\n    setTriageState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null\n    }));\n    try {\n      const response = await triageApi.startTriage(input);\n      const questions = processQuestions(response.questions_to_ask_next);\n      setTriageState(prev => ({\n        ...prev,\n        caseId: response.case_id,\n        currentQuestion: questions[0] || null,\n        remainingQuestions: questions.length - 1,\n        triage: response.triage,\n        filePath: response.file_path,\n        isLoading: false,\n        error: null\n      }));\n    } catch (error) {\n      setTriageState(prev => ({\n        ...prev,\n        isLoading: false,\n        error: error.message\n      }));\n      throw error;\n    }\n  }, [processQuestions]);\n  const handleSendAnswer = useCallback(async (answer, skip = false) => {\n    if (!triageState.caseId) return;\n    setTriageState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null\n    }));\n    try {\n      const currentQ = triageState.currentQuestion;\n      const body = {\n        answers: currentQ ? {\n          [currentQ]: skip ? '' : answer\n        } : undefined,\n        done: false\n      };\n      const response = await triageApi.sendAnswer(triageState.caseId, body);\n      const questions = processQuestions(response.questions_to_ask_next);\n      setTriageState(prev => ({\n        ...prev,\n        currentQuestion: questions[0] || null,\n        remainingQuestions: questions.length - 1,\n        triage: response.triage,\n        filePath: response.file_path,\n        isLoading: false,\n        error: null\n      }));\n    } catch (error) {\n      setTriageState(prev => ({\n        ...prev,\n        isLoading: false,\n        error: error.message\n      }));\n      throw error;\n    }\n  }, [triageState.caseId, triageState.currentQuestion, processQuestions]);\n  const handleDone = useCallback(async () => {\n    if (!triageState.caseId) return;\n    setTriageState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null\n    }));\n    try {\n      const response = await triageApi.sendAnswer(triageState.caseId, {\n        done: true\n      });\n      setTriageState(prev => ({\n        ...prev,\n        currentQuestion: null,\n        remainingQuestions: 0,\n        triage: response.triage,\n        filePath: response.file_path,\n        isLoading: false,\n        error: null\n      }));\n    } catch (error) {\n      setTriageState(prev => ({\n        ...prev,\n        isLoading: false,\n        error: error.message\n      }));\n      throw error;\n    }\n  }, [triageState.caseId]);\n  const handleReset = useCallback(() => {\n    setTriageState({\n      caseId: null,\n      currentQuestion: null,\n      remainingQuestions: 0,\n      triage: null,\n      filePath: null,\n      isLoading: false,\n      error: null\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n        triageState: triageState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"triage-section\",\n        children: [/*#__PURE__*/_jsxDEV(InputSection, {\n          triageState: triageState,\n          onStartTriage: handleStartTriage,\n          onSendAnswer: handleSendAnswer,\n          onDone: handleDone,\n          onReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResultsSection, {\n          triageState: triageState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B1a17BNN3Iqu3Gl3MHouthYXr3c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","triageApi","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","patientData","setPatientData","nurseNotes","setNurseNotes","triageState","setTriageState","caseId","currentQuestion","remainingQuestions","triage","filePath","isLoading","error","processQuestions","questions","Array","isArray","result","primary","push","secondary","handleStartTriage","input","prev","response","startTriage","questions_to_ask_next","case_id","length","file_path","message","handleSendAnswer","answer","skip","currentQ","body","answers","undefined","done","sendAnswer","handleDone","handleReset","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Dashboard","InputSection","onStartTriage","onSendAnswer","onDone","onReset","ResultsSection","_c","$RefreshReg$"],"sources":["C:/Users/tkurt/Desktop/ai-triage/triage-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport './App.css';\r\nimport PatientEntry from './components/PatientEntry';\r\nimport NurseApproval from './components/NurseApproval';\r\nimport DoctorPage from './components/DoctorPage';\r\nimport { TriageState, TriageInput } from './types/TriageTypes';\r\nimport { triageApi } from './services/triageApi';\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState<'patient' | 'nurse' | 'doctor'>('patient');\r\n  const [patientData, setPatientData] = useState<any>(null);\r\n  const [nurseNotes, setNurseNotes] = useState<string>('');\r\n  \r\n  const [triageState, setTriageState] = useState<TriageState>({\r\n    caseId: null,\r\n    currentQuestion: null,\r\n    remainingQuestions: 0,\r\n    triage: null,\r\n    filePath: null,\r\n    isLoading: false,\r\n    error: null,\r\n  });\r\n\r\n  const processQuestions = useCallback((questions: any) => {\r\n    if (Array.isArray(questions)) {\r\n      return questions;\r\n    }\r\n    if (questions && typeof questions === 'object') {\r\n      const result: string[] = [];\r\n      if (questions.primary) result.push(...questions.primary);\r\n      if (questions.secondary) result.push(...questions.secondary);\r\n      return result;\r\n    }\r\n    return [];\r\n  }, []);\r\n\r\n  const handleStartTriage = useCallback(async (input: TriageInput) => {\r\n    setTriageState(prev => ({ ...prev, isLoading: true, error: null }));\r\n    \r\n    try {\r\n      const response = await triageApi.startTriage(input);\r\n      const questions = processQuestions(response.questions_to_ask_next);\r\n      \r\n      setTriageState(prev => ({\r\n        ...prev,\r\n        caseId: response.case_id,\r\n        currentQuestion: questions[0] || null,\r\n        remainingQuestions: questions.length - 1,\r\n        triage: response.triage,\r\n        filePath: response.file_path,\r\n        isLoading: false,\r\n        error: null,\r\n      }));\r\n    } catch (error: any) {\r\n      setTriageState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        error: error.message,\r\n      }));\r\n      throw error;\r\n    }\r\n  }, [processQuestions]);\r\n\r\n  const handleSendAnswer = useCallback(async (answer: string, skip: boolean = false) => {\r\n    if (!triageState.caseId) return;\r\n\r\n    setTriageState(prev => ({ ...prev, isLoading: true, error: null }));\r\n\r\n    try {\r\n      const currentQ = triageState.currentQuestion;\r\n      const body = {\r\n        answers: currentQ ? { [currentQ]: skip ? '' : answer } : undefined,\r\n        done: false,\r\n      };\r\n\r\n      const response = await triageApi.sendAnswer(triageState.caseId, body);\r\n      const questions = processQuestions(response.questions_to_ask_next);\r\n      \r\n      setTriageState(prev => ({\r\n        ...prev,\r\n        currentQuestion: questions[0] || null,\r\n        remainingQuestions: questions.length - 1,\r\n        triage: response.triage,\r\n        filePath: response.file_path,\r\n        isLoading: false,\r\n        error: null,\r\n      }));\r\n    } catch (error: any) {\r\n      setTriageState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        error: error.message,\r\n      }));\r\n      throw error;\r\n    }\r\n  }, [triageState.caseId, triageState.currentQuestion, processQuestions]);\r\n\r\n  const handleDone = useCallback(async () => {\r\n    if (!triageState.caseId) return;\r\n\r\n    setTriageState(prev => ({ ...prev, isLoading: true, error: null }));\r\n\r\n    try {\r\n      const response = await triageApi.sendAnswer(triageState.caseId, { done: true });\r\n      \r\n      setTriageState(prev => ({\r\n        ...prev,\r\n        currentQuestion: null,\r\n        remainingQuestions: 0,\r\n        triage: response.triage,\r\n        filePath: response.file_path,\r\n        isLoading: false,\r\n        error: null,\r\n      }));\r\n    } catch (error: any) {\r\n      setTriageState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        error: error.message,\r\n      }));\r\n      throw error;\r\n    }\r\n  }, [triageState.caseId]);\r\n\r\n  const handleReset = useCallback(() => {\r\n    setTriageState({\r\n      caseId: null,\r\n      currentQuestion: null,\r\n      remainingQuestions: 0,\r\n      triage: null,\r\n      filePath: null,\r\n      isLoading: false,\r\n      error: null,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <main>\r\n        <Dashboard triageState={triageState} />\r\n        <div className=\"triage-section\">\r\n          <InputSection\r\n            triageState={triageState}\r\n            onStartTriage={handleStartTriage}\r\n            onSendAnswer={handleSendAnswer}\r\n            onDone={handleDone}\r\n            onReset={handleReset}\r\n          />\r\n          <ResultsSection triageState={triageState} />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}